@using EPiServer.Shell
@using EPiServer.Shell.Web.Mvc.Html
@using EPiServer.Framework.Web.Resources
@using ContentTypeUsage.ViewModels
@using EPiServer.Framework.Localization
@using EPiServer.Shell.Navigation

@model ContentTypeUsageViewModels

@{
    Layout = string.Empty;
    var adminModuleCss = Paths.ToClientResource("EPiServer.Cms.UI.Admin", "clientResources/dist/admin.bundle.css");
    var styleCss = Paths.ToClientResource(typeof(ContentTypeUsageViewModels), "ClientResources/Styles/style.css");
}

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<html>
<head>
    <title>@LocalizationService.Current.GetString("/plugins/contenttypeusage/displayname")</title>

    <!-- Admin CSS -->
    <link href="@adminModuleCss" type="text/css" rel="stylesheet" />

    <!-- Shell -->
    @ClientResources.RenderResources("ShellCore")

    <!-- LightTheme -->
    @ClientResources.RenderResources("ShellCoreLightTheme")

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/chosen/1.8.7/chosen.min.css" integrity="sha512-yVvxUQV0QESBt1SyZbNJMAwyKvFTLMyXSyBHDO4BG5t7k/Lw34tyqlSDlKIrIENIzCl+RVUNjmCPG+V/GMesRw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href="@styleCss" type="text/css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js" integrity="sha512-894YE6QWD5I59HgZOGReFYm4dnWc1Qt5NtvYSaNcOP+u1T9qYdvdihz0PPSiiqn/+/3e7Jo4EaG7TubfWGUrMQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://unpkg.com/micromodal/dist/micromodal.min.js" type="text/javascript"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/chosen/1.8.7/chosen.jquery.min.js" integrity="sha512-rMGGF4wg1R73ehtnxXBt5mbUfN9JUJwbk21KMlnLZDJh7BkPmeovBuddZCENJddHYYMkCh9hPFnPmS9sspki8g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-loading-overlay/2.1.7/loadingoverlay.min.js" integrity="sha512-hktawXAt9BdIaDoaO9DlLp6LYhbHMi5A36LcXQeHgVKUH6kJMOQsAtIw2kmQ9RERDpnSTlafajo6USh9JUXckw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script type="text/javascript">
        function escapeHtml(unsafe) {
            return unsafe
                .replace(/&/g, "&amp;")
                .replace(/</g, "&lt;")
                .replace(/>/g, "&gt;")
                .replace(/"/g, "&quot;")
                .replace(/'/g, "&#039;");
        }

        // Javascript string format
        String.prototype.format = String.prototype.f = function () {
            var s = this,
                i = arguments.length;

            while (i--) {
                s = s.replace(new RegExp('\\{' + i + '\\}', 'gm'), arguments[i]);
            }
            return s;
        };

        // Page size for the paging parameters
        var pageSize = 30;

        $(document).ready(function () {

            // Initialize jquery chosen plugin
            $('select[name="ContentType"]').chosen();

            // Handle click event of filter button
            $("#btnFilter").click(function (evt) {
                evt.preventDefault();

                var contentTypeId = $('select[name="ContentType"]').val();
                var contentTypeName = $('select[name="ContentType"] option:selected').text();

                $('#hidSelectedContentTypeId').val(contentTypeId);
                $('#hidSelectedContentTypeName').val(contentTypeName);

                $('#divContentInstances').show();

                clearContentInstancesSearch();

                retrieveContentInstances(1);
            });

            // Handle click event of search button on Content Instances table
            $("#btnContentInstancesSearch").click(function (evt) {
                evt.preventDefault();

                $("#txtContentInstancesSearch").val($.trim($("#txtContentInstancesSearch").val()));
                $('#hidContentInstancesSearchKeyword').val($("#txtContentInstancesSearch").val());

                retrieveContentInstances(1);
            });

            // Handle click event of search button on Content References table
            $("#btnContentReferencesSearch").click(function (evt) {
                evt.preventDefault();

                $("#txtContentReferencesSearch").val($.trim($("#txtContentReferencesSearch").val()));
                $('#hidContentReferencesSearchKeyword').val($("#txtContentReferencesSearch").val());

                var blockId = $("#hidSelectedBlockId").val();

                retrieveContentReferences(blockId, 1);
            });

            // Handle enter key event of search text box on Content Instances table
            $('#txtContentInstancesSearch').keypress(function (e) {
                if (e.which == 13) {//Enter key pressed
                    $('#btnContentInstancesSearch').click();//Trigger search button click event
                }
            });

            // Handle enter key event of search text box on Content References table
            $('#txtContentReferencesSearch').keypress(function (e) {
                if (e.which == 13) {//Enter key pressed
                    $('#btnContentReferencesSearch').click();//Trigger search button click event
                }
            });

        });

        // Handle click event of the pager of content instance table
        function contentInstancesPagerClick(evt, page) {
            (evt.preventDefault) ? evt.preventDefault() : evt.returnValue = false;
            retrieveContentInstances(page);
        }

        // Handle click event of the pager of content reference table
        function contentReferencesPagerClick(evt, blockId, page) {
            (evt.preventDefault) ? evt.preventDefault() : evt.returnValue = false;
            retrieveContentReferences(blockId, page);
        }

        // Perform Ajax request to retrieve a single page of Content Instances table
        function retrieveContentInstances(page) {
            // Load instance of selected content type
            var contentTypeId = $('#hidSelectedContentTypeId').val();
            var contentTypeName = $('#hidSelectedContentTypeName').val();
            var searchKeyword = $('#hidContentInstancesSearchKeyword').val();

            if ($('#divMainArea').LoadingOverlay != undefined) {
                $('#divMainArea').LoadingOverlay("show");
            }

            $.ajax({
                type: "GET",
                url: "/ContentTypeUsage/GetInstances?contentTypeId=" + contentTypeId + "&page=" + page + "&pageSize=" + pageSize + (searchKeyword != '' ? '&query=' + encodeURIComponent(searchKeyword) : ''),
                dataType: "json",
                success: function (response) {
                    if ($('#divMainArea').LoadingOverlay != undefined) {
                        $('#divMainArea').LoadingOverlay("hide", true);
                    }

                    // Empty listing table & repopulate with Json data
                    var table = $("#tblContentInstances > tbody");
                    table.find("tr:gt(0)").remove();
                    table.hide();

                    if (response.status) {
                        if (response.items.length > 0) {
                            table.show();
                            $("#contentInstancesSearch").show();
                            $("#spnContentInstancesItemCount").show();
                        } else {
                            $("#contentInstancesSearch").hide();
                            $("#spnContentInstancesItemCount").hide();
                            table.hide();
                        }

                        for (var i = 0; i < response.items.length; i++) {

                            var row = '<tr><td>' + response.items[i].id + '</td><td>' + escapeHtml(response.items[i].name) + '</td><td>';
                            
                            if (response.items[i].isBlockType){
                                row += response.items[i].usages + '</td><td>';
                                $("#thBlockUsages").show();
                            }else{
                                $("#thBlockUsages").hide();
                            }

                            if (response.items[i].viewLink != undefined) {
                                row += '<a href="' + response.items[i].viewLink + '" target="_blank" title="@Html.Translate("/plugins/contenttypeusage/viewTooltip")">@Html.Translate("/plugins/contenttypeusage/view")</a> &nbsp;';
                            }

                            if (response.items[i].editLink != undefined) {
                                row += '<a href="' + response.items[i].editLink + '" target="_blank" title="@Html.Translate("/plugins/contenttypeusage/editTooltip")">@Html.Translate("/plugins/contenttypeusage/edit")</a> &nbsp';
                            }

                            if (response.items[i].isBlockType && response.items[i].usages != 0) {
                                row += '<a href="#" onclick="viewBlockReferences(event, ' + response.items[i].id + ', \'' + escapeHtml(response.items[i].name.replace(/[\\"']/g, '\\$&').replace(/\u0000/g, '\\0')) + '\');" title="@Html.Translate("/plugins/contenttypeusage/referencesTooltip")">@Html.Translate("/plugins/contenttypeusage/references")</a> &nbsp';
                            }

                            row += '</td></tr>';
                            table.append(row);
                        }

                        // Add the pager row
                        table.append(constructPager(response.page, response.total, 'contentInstancesPagerClick'));

                        if (searchKeyword == '')
                            $('#spnContentInstancesSuggestion').html('@Html.Raw(Html.Translate("/plugins/contenttypeusage/contentInstanceSuggestions"))'.format(response.total, contentTypeName));
                        else
                            $('#spnContentInstancesSuggestion').html('@Html.Raw(Html.Translate("/plugins/contenttypeusage/searchSuggestions"))'.format(searchKeyword, response.total));

                        $('#spnContentInstancesItemCount').html('@Html.Raw(Html.Translate("/plugins/contenttypeusage/itemsCount"))'.format((page - 1) * pageSize + 1 <= response.total ? (page - 1) * pageSize + 1 : response.total, page * pageSize <= response.total ? page * pageSize : response.total, response.total));
                    }
                    else {
                        alert(response.message);
                    }
                }
            });
        }

        // Perform Ajax request to retrieve a single page of Content References table
        function retrieveContentReferences(blockId, page) {
            var searchKeyword = $('#hidContentReferencesSearchKeyword').val();
            if ($('#divModalContent').LoadingOverlay != undefined) {
                $("#divModalContent").LoadingOverlay("show");
            }

            $.ajax({
                type: "GET",
                url: "/ContentTypeUsage/GetReferences?blockId=" + blockId + "&page=" + page + "&pageSize=" + pageSize + (searchKeyword != '' ? "&query=" + searchKeyword : ''),
                dataType: "json",
                success: function (response) {
                    if ($('#divModalContent').LoadingOverlay != undefined) {
                        $("#divModalContent").LoadingOverlay("hide", true);
                    }

                    // Empty listing table & repopulate with Json data
                    var table = $("#tblContentReferences > tbody");
                    table.find("tr:gt(0)").remove();

                    if (response.status) {
                        for (var i = 0; i < response.items.length; i++) {
                            var row = '<tr><td>' + response.items[i].id + '</td><td>' + escapeHtml(response.items[i].name) + '</td><td>';
                            if (response.items[i].viewLink != undefined) {
                                row += '<a href="' + response.items[i].viewLink + '" target="_blank" title="@Html.Translate("/plugins/contenttypeusage/viewTooltip")">@Html.Translate("/plugins/contenttypeusage/view")</a> &nbsp;';
                            }

                            if (response.items[i].editLink != undefined) {
                                row += '<a href="' + response.items[i].editLink + '" target="_blank" title="@Html.Translate("/plugins/contenttypeusage/editTooltip")">@Html.Translate("/plugins/contenttypeusage/edit")</a> &nbsp';
                            }

                            row += '</td></tr>'
                            table.append(row);
                        }

                        // Add the pager row
                        table.append(constructPager(response.page, response.total, 'contentReferencesPagerClick'));

                        if (searchKeyword == '')
                            $('#spnContentReferencesSuggestion').html('@Html.Raw(Html.Translate("/plugins/contenttypeusage/contentReferencesSuggestions"))'.format(response.total));
                        else
                            $('#spnContentReferencesSuggestion').html('@Html.Raw(Html.Translate("/plugins/contenttypeusage/searchSuggestions"))'.format(searchKeyword, response.total));

                        $('#spnContentReferencesItemCount').html('@Html.Raw(Html.Translate("/plugins/contenttypeusage/itemsCount"))'.format((page - 1) * pageSize + 1 <= response.total ? (page - 1) * pageSize + 1 : response.total, page * pageSize <= response.total ? page * pageSize : response.total, response.total));
                    }
                    else {
                        alert(response.message);
                    }
                }
            });
        }

        // Show the modal dialog to display list of content references when user click on References link of a block instance.
        function viewBlockReferences(event, blockId, blockName) {
            (event.preventDefault) ? event.preventDefault() : event.returnValue = false;

            $("#modalHeader").html('@Html.Raw(Html.Translate("/plugins/contenttypeusage/modalDialogHeader"))'.format(escapeHtml(blockName), blockId));
            $("#hidSelectedBlockId").val(blockId);

            // Empty table content references & show the modal dialog
            var table = $("#tblContentReferences > tbody");
            table.find("tr:gt(0)").remove();
            clearContentReferencesSearch();
            MicroModal.show('modalDataView');

            retrieveContentReferences(blockId, 1);
        }

        // Clear search keyword of content instances table
        function clearContentInstancesSearch() {
            $("#txtContentInstancesSearch").val('');
            $('#hidContentInstancesSearchKeyword').val('');
        }

        // Clear search keyword of content references table
        function clearContentReferencesSearch() {
            $("#txtContentReferencesSearch").val('');
            $('#hidContentReferencesSearchKeyword').val('');
        }

        // Construct pager row at the end of the table
        function constructPager(page, total, pagingAction) {
            var isReferencesPager = false;
            var blockId = $('#hidSelectedBlockId').val();
            if (pagingAction == 'contentReferencesPagerClick') {
                isReferencesPager = true;
            }

            var markup = '<tr class="epipager" id="pagerRow"><td colspan="3">';

            var totalPage = Math.ceil(total / pageSize);

            var roundUp = Math.ceil(page / 10);

            var roundDown = (page % 10 != 0) ? Math.floor(page / 10) : (page / 10) - 1;

            // Show last section indicator if current page is greater than 10
            if (page > 10) {
                var lastSectionLink = '<a href="#" onclick="' + pagingAction + '(event, ';
                if (isReferencesPager) {
                    lastSectionLink += blockId + ', ';
                }
                lastSectionLink += (roundDown * 10) + ', ' + pageSize + ')">...</a> &nbsp;';
                markup += lastSectionLink;
            }

            var stoppingPoint = 0;
            if (totalPage <= roundUp * 10)
                stoppingPoint = totalPage;
            else
                stoppingPoint = roundUp * 10;

            // List the current 10 pages segment
            for (var i = roundDown * 10 + 1; i <= stoppingPoint; i++) {
                var pageLink = '';
                if (i == page) {
                    pageLink = '<span>' + page + '</span> &nbsp;';
                    markup += pageLink;
                    continue;
                }

                pageLink = '<a href="#" onclick="' + pagingAction + '(event, ';
                if (isReferencesPager) {
                    pageLink += blockId + ', ';
                }
                pageLink += i + ', ' + pageSize + ')">' + i + '</a> &nbsp;';

                markup += pageLink;
            }

            // Show next indicator if total page is greater than round up of current page (round to a number divisible by 10)

            if (totalPage > roundUp * 10) {
                var nextSectionLink = '<a href="#" onclick="' + pagingAction + '(event, ';
                if (isReferencesPager) {
                    nextSectionLink += blockId + ', ';
                }
                nextSectionLink += (roundUp * 10 + 1) + ', ' + pageSize + ')">...</a> &nbsp;'
                markup += nextSectionLink;
            }

            markup += '</td></tr>';
            return markup;
        }
    </script>
</head>
<body class="epi-contentTypeUsage">
    @Html.CreatePlatformNavigationMenu()
    <div @Html.ApplyPlatformNavigation() style="overflow: visible;">
        <div class="epi-contentContainer epi-padding">
            <div class="epi-contentArea">
                <h2 class="epi-uif-typography mdc-typography--headline4">@Html.Translate("/plugins/contenttypeusage/displayName")</h2>
                <p class="epi-uif-typography mdc-typography--body1">
                    @Html.Translate("/plugins/contenttypeusage/description")
                </p>
            </div>

            <div class="epi-formArea epi-paddingVertical-small" id="divMainArea">
                <div class="epi-size15">
                    <div>
                        <label for="ddlContentType" class="epi-uif-typography mdc-typography--body1">@Html.Translate("/plugins/contenttypeusage/contenttype")</label>
                        <select class="EP-requiredField required" id="ddlContentType" name="ContentType">
                            <optgroup label="@Html.Translate("/admin/menuheadings/pagetypes")">
                                @foreach (var item in Model.AllPageTypes)
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            </optgroup>
                            <optgroup label="@Html.Translate("/admin/menuheadings/blocktypes")">
                                @foreach (var item in Model.AllBlockTypes)
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            </optgroup>
                        </select>

                        <input type="hidden" id="hidSelectedContentTypeId" />
                        <input type="hidden" id="hidSelectedContentTypeName" />
                        <span class="epi-cmsButton">
                            <input class="epi-cmsButton-text epi-cmsButton-tools" type="button"
                                   name="btnFilter" id="btnFilter"
                                   value="@Html.Translate("/plugins/contenttypeusage/filter")"
                                   title="@Html.Translate("/plugins/contenttypeusage/filter")">
                        </span>
                    </div>
                    <div class="epi-indent">
                        <br /><br />
                    </div>
                </div>

                <div id="divContentInstances" style="display: none;">
                    <div style="float: right" class="epi-size15" id="contentInstancesSearch">
                        <input name="txtContentInstancesSearch" type="text" id="txtContentInstancesSearch" class="EP-requiredField">
                        <input type="hidden" id="hidContentInstancesSearchKeyword" />
                        <span class="epi-cmsButton" style="margin-right: 0px !important;">
                            <input class="epi-cmsButton-text epi-cmsButton-tools" type="button"
                                   name="btnContentInstancesSearch" id="btnContentInstancesSearch"
                                   value="@Html.Translate("/plugins/contenttypeusage/search")"
                                   title="@Html.Translate("/plugins/contenttypeusage/search")">
                        </span>
                    </div>
                    <div class="epi-size15" style="float: left">
                        <span id="spnContentInstancesSuggestion"></span>
                    </div>
                    <br />
                    <table class="epi-default" cellspacing="0" id="tblContentInstances" style="border-style: None; border-collapse: collapse;">
                        <tbody>
                            <tr id="thRow">
                                <th class="epitableheading" scope="col">@Html.Translate("/plugins/contenttypeusage/contentId")</th>
                                <th class="epitableheading" scope="col">@Html.Translate("/plugins/contenttypeusage/name")</th>
                                <th class="epitableheading" scope="col" id="thBlockUsages">@Html.Translate("/plugins/contenttypeusage/usages")</th>
                                <th class="epitableheading" scope="col">@Html.Translate("/plugins/contenttypeusage/links")</th>
                            </tr>
                        </tbody>
                    </table>
                    <br />
                    <div class="epi-size15" style="float: left">
                        <span id="spnContentInstancesItemCount"></span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal -->
        <div class="modal micromodal-slide" id="modalDataView" aria-hidden="true">
            <div class="modal__overlay" tabindex="-1" data-micromodal-close>
                <div class="modal__container" role="dialog" aria-modal="true" aria-labelledby="modalHeader">
                    <header class="modal__header">
                        <p id="modalHeader"></p>
                        <button class="modal__close" aria-label="Close modal" data-micromodal-close></button>
                    </header>
                    <main class="modal__content" id="modalContent">
                        <div class="epi-contentContainer">
                            <div class="epi-formArea">
                                <div class="epi-contentArea">
                                    <input type="hidden" id="hidSelectedBlockId" />

                                    <div style="float: right" class="epi-size15">
                                        <input name="txtContentReferencesSearch" type="text" id="txtContentReferencesSearch" class="EP-requiredField">
                                        <input type="hidden" id="hidContentReferencesSearchKeyword" />
                                        <span class="epi-cmsButton" style="margin-right: 0px !important;">
                                            <input class="epi-cmsButton-text epi-cmsButton-tools epi-cmsButton-Search" type="button"
                                                   name="btnContentReferencesSearch" id="btnContentReferencesSearch"
                                                   value="@Html.Translate("/plugins/contenttypeusage/search")"
                                                   title="@Html.Translate("/plugins/contenttypeusage/search")">
                                        </span>
                                    </div>

                                    <div class="epi-size15" style="float: left">
                                        <span id="spnContentReferencesSuggestion">@Html.Raw(Html.Translate("/plugins/contenttypeusage/contentReferencesSuggestion"))</span>
                                    </div>

                                    <br>
                                    <table class="epi-default" cellspacing="0" id="tblContentReferences" style="border-style: None; border-collapse: collapse;">
                                        <tbody>
                                            <tr id="thRow">
                                                <th class="epitableheading" scope="col">@Html.Translate("/plugins/contenttypeusage/contentId")</th>
                                                <th class="epitableheading" scope="col">@Html.Translate("/plugins/contenttypeusage/name")</th>
                                                <th class="epitableheading" scope="col">@Html.Translate("/plugins/contenttypeusage/links")</th>
                                            </tr>
                                        </tbody>
                                    </table>
                                    <br />
                                    <div class="epi-size15">
                                        <span id="spnContentReferencesItemCount"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </main>
                    <footer class="modal__footer">
                        <button class="modal__btn" data-micromodal-close aria-label="@Html.Translate("/plugins/contenttypeusage/close")">@Html.Translate("/plugins/contenttypeusage/close")</button>
                    </footer>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
